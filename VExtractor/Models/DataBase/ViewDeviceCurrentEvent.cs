// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace VExtractor.Models.DataBase;

public partial class ViewDeviceCurrentEvent
{
    public int DeviceId { get; set; }

    public byte CompanyId { get; set; }

    public string DeviceName { get; set; }

    public int DeviceTypeId { get; set; }

    public string DeviceDescription { get; set; }

    public string DeviceSerial { get; set; }

    public int DeviceStatusDatapointId { get; set; }

    public bool DeviceDeleted { get; set; }

    public bool DeviceActive { get; set; }

    public string DeviceCustomerDescription { get; set; }

    public string DeviceCity { get; set; }

    public string DeviceZipCode { get; set; }

    public string DeviceStreet { get; set; }

    public string DeviceLocation { get; set; }

    public int DatapointId { get; set; }

    public string DatapointName { get; set; }

    public bool DatapointDeleted { get; set; }

    public int DatapointStatusEventTypeId { get; set; }

    public string DatapointDescription { get; set; }

    public string DatapointAddress { get; set; }

    public int DataPointTypeId { get; set; }

    public int EventTypeGroupId { get; set; }

    public string EventTypeGroupName { get; set; }

    public int EventTypeGroupOrderIndex { get; set; }

    public string EventTypeGroupAddress { get; set; }

    public bool EventTypeGroupEntrancePoint { get; set; }

    public int EventTypeGroupParentId { get; set; }

    public string EventTypeGroupDescription { get; set; }

    public int? EventTypeOrder { get; set; }

    public int? EventTypeId { get; set; }

    public bool? EventTypeIsEnum { get; set; }

    public string EventTypeDefaultValue { get; set; }

    public string EventTypeUrl { get; set; }

    public int? EventTypeType { get; set; }

    public int? EventTypePriority { get; set; }

    public string EventTypeDesription { get; set; }

    public string EventTypeConversion { get; set; }

    public string EventTypeAddress { get; set; }

    public string EventTypeName { get; set; }

    public long? EventLogId { get; set; }

    public int? EventLogEventValueTypeId { get; set; }

    public double? EventValueFloat { get; set; }

    public int? EventValueInt { get; set; }

    public string EventValueVarChar { get; set; }

    public string EventValueNtext { get; set; }

    public bool? EventValueBit { get; set; }

    public byte[] EventValueBinary { get; set; }

    public DateTime? EventValueDateTime { get; set; }

    public string DataType { get; set; }

    public string Unit { get; set; }

    public DateTime? EventTime { get; set; }

    public int? EventPriority { get; set; }

    public int? StatusTypeId { get; set; }

    public DateTime? EventReceivedTime { get; set; }

    public long? EventLogDataGroupId { get; set; }
}